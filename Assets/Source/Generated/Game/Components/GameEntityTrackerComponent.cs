//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity entityTrackerEntity { get { return GetGroup(GameMatcher.EntityTracker).GetSingleEntity(); } }
    public EntityTracker entityTracker { get { return entityTrackerEntity.entityTracker; } }
    public bool hasEntityTracker { get { return entityTrackerEntity != null; } }

    public GameEntity SetEntityTracker(int newValue) {
        if (hasEntityTracker) {
            throw new Entitas.EntitasException("Could not set EntityTracker!\n" + this + " already has an entity with EntityTracker!",
                "You should check if the context already has a entityTrackerEntity before setting it or use context.ReplaceEntityTracker().");
        }
        var entity = CreateEntity();
        entity.AddEntityTracker(newValue);
        return entity;
    }

    public void ReplaceEntityTracker(int newValue) {
        var entity = entityTrackerEntity;
        if (entity == null) {
            entity = SetEntityTracker(newValue);
        } else {
            entity.ReplaceEntityTracker(newValue);
        }
    }

    public void RemoveEntityTracker() {
        entityTrackerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EntityTracker entityTracker { get { return (EntityTracker)GetComponent(GameComponentsLookup.EntityTracker); } }
    public bool hasEntityTracker { get { return HasComponent(GameComponentsLookup.EntityTracker); } }

    public void AddEntityTracker(int newValue) {
        var index = GameComponentsLookup.EntityTracker;
        var component = CreateComponent<EntityTracker>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEntityTracker(int newValue) {
        var index = GameComponentsLookup.EntityTracker;
        var component = CreateComponent<EntityTracker>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEntityTracker() {
        RemoveComponent(GameComponentsLookup.EntityTracker);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEntityTracker;

    public static Entitas.IMatcher<GameEntity> EntityTracker {
        get {
            if (_matcherEntityTracker == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EntityTracker);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEntityTracker = matcher;
            }

            return _matcherEntityTracker;
        }
    }
}
